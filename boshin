#!/bin/bash
#
#   @(#) スクショを撮影してタイトルバーとかをトリミングしてくれるやつ
#
#   Author:
#       844196 (@84____)
#
#   License:
#       MIT
#


# initialize
## option
set -u
set -e

## about me
readonly ME="${0##*/}"
readonly VERSION="1.0"

## usage
function usage() {
    cat <<-EOF 1>&2
	Usage:
	    ${ME} [-vh] [-i input_file] [output_path]
	
	Argument:
	    output_path     Specify the output filepath. (default: ./YYYY-mm-dd_HH-MM-SS.png)
	
	Options:
	    -v, --version   Print version and exit successfully.
	    -h, --help      Print this help and exit successfully.
	    -i, --input     Specify the input filepath.
	EOF
    return 0
}

## error
function error() {
    echo "${ME}: ${1}" 1>&2
    exit "${2:-1}"
}

## temporary file
readonly TMPDIR="$(mktemp -d "/tmp/${ME}.XXXXXXXXXX")"
trap 'rm -rf "${TMPDIR}"' 0 1 2 3 15

## check require command
type convert >/dev/null 2>&1 || error "requires convert (ImageMagick)" "2"


# get and check argument, options
## get option
for OPTIONS in "${@-}"
do
    case "${OPTIONS}" in
        '-h'|'--help' )
            usage
            exit 0
            ;;
        '-v'|'--version' )
            echo "${VERSION}" 1>&2
            exit 0
            ;;
        '-i'|'--input' )
            if [[ -z "${2-}" ]] || [[ "${2-}" =~ ^-+ ]]; then
                error "option requires an argument -- '${1}'" "-1"
            fi
            input_filename="${2}"
            shift 2
            ;;
        -* )
            error "illegal option -- '${1}'" "-1"
            ;;
        * )
            if [[ -n "${1-}" ]] && [[ ! "${1-}" =~ ^-+ ]]; then
                args+=( "${1}" )
                shift 1
            fi
            ;;
    esac
done

## get argument
output_filename="${args[0]:-}"


# main
## take screen capture
if [[ -z "${input_filename:-}" ]]; then
    input_filename="${TMPDIR}/ss_master.png"
    screencapture -wo -t png "$(mktemp "${input_filename}")"
fi
: "${output_filename:=./$(date +"%Y-%m-%d_%H-%M-%S").png}"

## triming top titlebar
convert -chop 0x18 "${input_filename}" "$(mktemp "${TMPDIR}/ss_top-triming.png")"

## triming bottom round transpacy
convert -shave 0x4 "${TMPDIR}/ss_top-triming.png" "${output_filename}"

## if connect pipe, print output filename
[[ -p /dev/stdout ]] && echo "${output_filename}"


# exit
exit 0
